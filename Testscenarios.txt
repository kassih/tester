package org.springframework.samples.petclinic;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ImportRuntimeHints;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Arrays;
import java.util.List;

/**
 * PetClinic Spring Boot Application with Domain Reachability Checker.
 */
@SpringBootApplication
@ImportRuntimeHints(PetClinicRuntimeHints.class)
public class PetClinicApplication {

    public static void main(String[] args) {
        SpringApplication.run(PetClinicApplication.class, args);
        checkWhitelistedDomains();
    }

    private static void checkWhitelistedDomains() {
        List<String> domains = Arrays.asList(
            "*.amazonaws.com", "*.anchore.io", "github.com", "*.github.com",
            "*.githubusercontent.com", "galaxy.ansible.com", "*.npmjs.org", "npmjs.org",
            "nodejs.org", "*.snyk.io", "snyk.io", "golang.org", "*.golang.org",
            "code.gitea.io", "go.dev", "gopkg.in", "go.googlesource.com",
            "cloud.google.com", "dl.google.com", "go.opencensus.io", "gocloud.dev",
            "storage.googleapis.com", "*.maven.org", "*.maven.apache.org", "maven.org",
            "dlcdn.apache.org", "pypi.python.org", "pypi.org", "files.pythonhosted.org",
            "*.hashicorp.com", "registry.terraform.io", "*.redhat.com", "*.redhat.io",
            "cdn.redhat.com", "*.cdn.redhat.com", "cdn-ubi.redhat.com",
            "*.quay.io", "quay.io", "*.gcr.io", "gcr.io", "ghcr.io"
        );

        System.out.println("Starting whitelist domain check:");
        for (String domain : domains) {
            String cleaned = domain.replace("*.", "www.");
            try {
                URL url = new URL("https://" + cleaned);
                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
                conn.setRequestMethod("GET");
                conn.setConnectTimeout(3000);
                conn.connect();

                int code = conn.getResponseCode();
                System.out.println("[+] " + cleaned + " is reachable (Status: " + code + ")");
            } catch (IOException e) {
                System.out.println("[-] " + cleaned + " unreachable: " + e.getMessage());
            }
        }
    }
}
