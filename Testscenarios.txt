src/main/java/com/example/githubpost
    ├── GithubPostApplication.java
    └── GithubPostService.java
1. Spring Boot Main Application (GithubPostApplication.java)



CODE



package com.example.githubpost;

import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.beans.factory.annotation.Autowired;

/**
 * Spring Boot application to send a POST request to GitHub Gists API.
 * Author: hamid ben
 */
@SpringBootApplication
public class GithubPostApplication {

    @Autowired
    private GithubPostService githubPostService;

    public static void main(String[] args) {
        SpringApplication.run(GithubPostApplication.class, args);
    }

    @Bean
    CommandLineRunner run() {
        return args -> githubPostService.sendPostRequest();
    }
}
2. Service for Sending POST Request (GithubPostService.java)


CODE 




package com.example.githubpost;

import org.springframework.stereotype.Service;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

/**
 * Service to send a POST request to GitHub Gists API.
 */
@Service
public class GithubPostService {

    private static final String TOKEN = "GITHUB TOKEN";
    private static final String API_URL = "https://api.github.com/gists";
    private static final String DESCRIPTION = "Simple Hi Message";
    private static final String FILENAME = "hi.txt";
    private static final String CONTENT = "hi";

    public void sendPostRequest() {
        RestTemplate restTemplate = new RestTemplate();
        HttpHeaders headers = new HttpHeaders();
        headers.set("Authorization", "token " + TOKEN);
        headers.set("User-Agent", "Mozilla/5.0");
        headers.set("Content-Type", "application/json");

        String jsonBody = createJsonPayload();
        HttpEntity<String> entity = new HttpEntity<>(jsonBody, headers);

        try {
            ResponseEntity<String> response = restTemplate.exchange(API_URL, HttpMethod.POST, entity, String.class);
            if (response.getStatusCode().is2xxSuccessful()) {
                System.out.println("Message uploaded successfully!");
                System.out.println("Response: " + response.getBody());
            } else {
                System.err.println("Failed to upload message. Status code: " + response.getStatusCode());
            }
        } catch (Exception e) {
            System.err.println("Error while sending POST request: " + e.getMessage());
        }
    }

    private String createJsonPayload() {
        return String.format(
                "{ \"description\": \"%s\", \"public\": true, \"files\": { \"%s\": { \"content\": \"%s\" } } }",
                DESCRIPTION, FILENAME, CONTENT);
    }
}
